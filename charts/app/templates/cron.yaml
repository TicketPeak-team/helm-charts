apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.service.name }}-cron
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app: {{ .Values.app.service.name }}-cron
  template:
    metadata:
      labels:
        app: {{ .Values.app.service.name }}-cron
    spec:
      {{- if .Values.iam.service_account_name }}
      serviceAccountName:  {{ .Values.iam.service_account_name }}
      {{ end }}
      terminationGracePeriodSeconds: 30
      shareProcessNamespace: true
      volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-pv-{{ .Release.Namespace }}
      nodeSelector:
        ticketpeak/node_type: cron-{{ .Release.Namespace }}
      tolerations:
        - key: "ticketpeak/node_type"
          operator: "Equal"
          value: "cron-{{ .Release.Namespace }}"
          effect: "NoSchedule"
      containers:
        - name: {{ .Values.app.service.name }}-cron
          image: "{{ .Values.image.url }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          volumeMounts:
            - name: efs
              mountPath: /var/www/html/storage
          imagePullPolicy: Always
          command:
            - "/bin/bash"
            - "-c"
            - "aws s3 cp s3://149536470129-ticketpeak-env/{{ .Release.Namespace }}/.env /var/www/html/.env && /var/www/html/cron.sh"
          ports:
            - containerPort: {{ .Values.app.pod.port }}
          resources:
            requests:
              memory: 4096Mi
              cpu: 1024m
            limits:
              memory: 4096Mi
              cpu: 1024m
          envFrom:
            - secretRef:
                name: {{ .Values.app.secretName }}
          securityContext:
            fsGroup: 33
            capabilities:
              drop:
                - all
      restartPolicy: Always
status: { }
