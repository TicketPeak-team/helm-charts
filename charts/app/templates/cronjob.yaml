apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.app.service.name }}-job
spec:
  schedule: "* * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app
                        operator: In
                        values:
                          - {{ .Values.app.service.name }}
                  topologyKey: "kubernetes.io/hostname"
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 50
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - {{ .Values.app.service.name }}
                    topologyKey: "topology.kubernetes.io/zone"
          {{ if .Values.iam.service_account_name }}
          serviceAccountName: {{ .Values.iam.service_account_name }}
          {{ end }}
          terminationGracePeriodSeconds: 30
          shareProcessNamespace: true
          volumes:
            - name: efs
              persistentVolumeClaim:
                claimName: efs-pv-{{ .Release.Namespace }}
          containers:
            - name: {{ .Values.app.service.name }}-job
              image: "{{ .Values.image.url }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
              volumeMounts:
                - name: efs
                  mountPath: /var/www/html/storage
              imagePullPolicy: Always
              command:
                - "/bin/bash"
                - "-c"
                - "aws s3 cp s3://149536470129-ticketpeak-env/{{ .Release.Namespace }}/.env /var/www/html/.env && php artisan storage:link && php artisan schedule:run"
              ports:
                - containerPort: {{ .Values.app.pod.port }}
              resources:
                requests:
                  memory: {{ .Values.app.resources.requests.memory }}
                  cpu: {{ .Values.app.resources.requests.cpu }}
                limits:
                  memory: {{ .Values.app.resources.limits.memory }}
                  cpu: {{ .Values.app.resources.limits.cpu }}
              envFrom:
                - secretRef:
                    name: {{ .Values.app.secretName }}
              securityContext:
                capabilities:
                  drop:
                    - all
          restartPolicy: Never